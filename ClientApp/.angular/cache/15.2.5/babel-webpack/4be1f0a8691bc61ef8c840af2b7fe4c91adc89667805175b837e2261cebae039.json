{"ast":null,"code":"import { of, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CollectionService = /*#__PURE__*/(() => {\n  class CollectionService {\n    constructor(http, baseUrl) {\n      this.http = http;\n      this.baseUrl = baseUrl;\n      this.apiUrl = 'api/v1/collections';\n    }\n    getAllCollections() {\n      return this.http.get(this.baseUrl + `${this.apiUrl}/all`);\n    }\n    getCollection(id) {\n      return this.http.get(this.baseUrl + `${this.apiUrl}/get`, {\n        params: {\n          id: id\n        }\n      });\n    }\n    createCollection(collection) {\n      return this.http.post(this.baseUrl + `${this.apiUrl}/create`, {\n        params: {\n          collection: collection\n        }\n      });\n    }\n    updateCollection(id, collection) {\n      return this.http.put(`this.baseUrl + ${this.apiUrl}/update`, {\n        params: {\n          id: id,\n          collection: collection\n        }\n      });\n    }\n    deleteCollection(id) {\n      return this.http.delete(this.baseUrl + `${this.apiUrl}/delete`, {\n        params: {\n          id: id\n        }\n      });\n    }\n    addAlbumToCollection(collectionId, album) {\n      return this.addAlbumToCollectionAsync(collectionId, album).pipe(switchMap(response => {\n        return of(response);\n      }));\n    }\n    addAlbumToCollectionAsync(collectionId, album) {\n      return this.http.post(this.baseUrl + `${this.apiUrl}/addAlbum`, {\n        CollectionId: collectionId,\n        AlbumId: album.id\n      });\n    }\n    updateAlbumInCollection(collectionId, albumId, album) {\n      return this.http.put(this.baseUrl + `${this.apiUrl}/updateAlbum`, {\n        params: {\n          collectionId: collectionId,\n          albumId: albumId,\n          album: album\n        }\n      });\n    }\n    removeAlbumFromCollection(collectionId, album) {\n      return this.removeAlbumFromCollectionAsync(collectionId, album).pipe(switchMap(response => {\n        return of(response);\n      }));\n    }\n    removeAlbumFromCollectionAsync(collectionId, album) {\n      return this.http.post(this.baseUrl + `${this.apiUrl}/removeAlbum`, {\n        CollectionId: collectionId,\n        AlbumId: album.id\n      });\n    }\n  }\n  CollectionService.ɵfac = function CollectionService_Factory(t) {\n    return new (t || CollectionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n  };\n  CollectionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CollectionService,\n    factory: CollectionService.ɵfac,\n    providedIn: 'root'\n  });\n  return CollectionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}