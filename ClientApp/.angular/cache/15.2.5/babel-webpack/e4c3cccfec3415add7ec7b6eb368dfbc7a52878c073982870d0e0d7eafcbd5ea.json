{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nlet CollectionGridComponent = class CollectionGridComponent {\n  constructor(collectionService) {\n    this.collectionService = collectionService;\n    this.albums = [];\n    this.filteredAlbums = [];\n    this.searchControl = new FormControl('');\n    this.currentPage = 1;\n    this.itemsPerPage = 9;\n  }\n  ngOnInit() {\n    this.loadCollection();\n    this.searchControl.valueChanges.subscribe(searchTerm => {\n      this.filterAlbums(searchTerm);\n    });\n  }\n  loadCollection() {\n    this.collectionService.getCollection().subscribe(collection => {\n      this.albums = collection.albums;\n      this.filterAlbums(this.searchControl.value);\n    });\n  }\n  filterAlbums(searchTerm) {\n    const filtered = this.albums.filter(album => album.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    this.filteredAlbums = filtered;\n    this.currentPage = 1;\n  }\n  get totalPages() {\n    return Math.ceil(this.filteredAlbums.length / this.itemsPerPage);\n  }\n  get visibleAlbums() {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    return this.filteredAlbums.slice(startIndex, startIndex + this.itemsPerPage);\n  }\n  onPageChange(page) {\n    this.currentPage = page;\n  }\n};\nCollectionGridComponent = __decorate([Component({\n  selector: 'app-collection-grid',\n  templateUrl: './collection-grid.component.html',\n  styleUrls: ['./collection-grid.component.css']\n})], CollectionGridComponent);\nexport { CollectionGridComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,QAAQ,gBAAgB;AASrC,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAOlCC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IANrC,WAAM,GAAY,EAAE;IACpB,mBAAc,GAAY,EAAE;IAC5B,kBAAa,GAAG,IAAIH,WAAW,CAAC,EAAE,CAAC;IACnC,gBAAW,GAAG,CAAC;IACf,iBAAY,GAAG,CAAC;EAE2C;EAE3DI,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,aAAa,CAACC,YAAY,CAACC,SAAS,CAAEC,UAAU,IAAI;MACvD,IAAI,CAACC,YAAY,CAACD,UAAU,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEAJ,cAAc;IACZ,IAAI,CAACF,iBAAiB,CAACQ,aAAa,EAAE,CAACH,SAAS,CAAEI,UAAU,IAAI;MAC9D,IAAI,CAACC,MAAM,GAAGD,UAAU,CAACC,MAAM;MAC/B,IAAI,CAACH,YAAY,CAAC,IAAI,CAACJ,aAAa,CAACQ,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAJ,YAAY,CAACD,UAAkB;IAC7B,MAAMM,QAAQ,GAAG,IAAI,CAACF,MAAM,CAACG,MAAM,CAAEC,KAAK,IACxCA,KAAK,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,EAAE,CAAC,CAC7D;IACD,IAAI,CAACE,cAAc,GAAGN,QAAQ;IAC9B,IAAI,CAACO,WAAW,GAAG,CAAC;EACtB;EAEA,IAAIC,UAAU;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACJ,cAAc,CAACK,MAAM,GAAG,IAAI,CAACC,YAAY,CAAC;EAClE;EAEA,IAAIC,aAAa;IACf,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACP,WAAW,GAAG,CAAC,IAAI,IAAI,CAACK,YAAY;IAC7D,OAAO,IAAI,CAACN,cAAc,CAACS,KAAK,CAC9BD,UAAU,EACVA,UAAU,GAAG,IAAI,CAACF,YAAY,CAC/B;EACH;EAEAI,YAAY,CAACC,IAAY;IACvB,IAAI,CAACV,WAAW,GAAGU,IAAI;EACzB;CACD;AA9CY/B,uBAAuB,eALnCF,SAAS,CAAC;EACTkC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWlC,uBAAuB,CA8CnC;SA9CYA,uBAAuB","names":["Component","FormControl","CollectionGridComponent","constructor","collectionService","ngOnInit","loadCollection","searchControl","valueChanges","subscribe","searchTerm","filterAlbums","getCollection","collection","albums","value","filtered","filter","album","title","toLowerCase","includes","filteredAlbums","currentPage","totalPages","Math","ceil","length","itemsPerPage","visibleAlbums","startIndex","slice","onPageChange","page","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\AngularNetVinyl\\ClientApp\\src\\app\\collection\\collection.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { CollectionService } from 'path/to/collection.service';\nimport { Album } from 'path/to/album.model';\n\n@Component({\n  selector: 'app-collection-grid',\n  templateUrl: './collection-grid.component.html',\n  styleUrls: ['./collection-grid.component.css'],\n})\nexport class CollectionGridComponent implements OnInit {\n  albums: Album[] = [];\n  filteredAlbums: Album[] = [];\n  searchControl = new FormControl('');\n  currentPage = 1;\n  itemsPerPage = 9;\n\n  constructor(private collectionService: CollectionService) {}\n\n  ngOnInit(): void {\n    this.loadCollection();\n    this.searchControl.valueChanges.subscribe((searchTerm) => {\n      this.filterAlbums(searchTerm);\n    });\n  }\n\n  loadCollection(): void {\n    this.collectionService.getCollection().subscribe((collection) => {\n      this.albums = collection.albums;\n      this.filterAlbums(this.searchControl.value);\n    });\n  }\n\n  filterAlbums(searchTerm: string): void {\n    const filtered = this.albums.filter((album) =>\n      album.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    this.filteredAlbums = filtered;\n    this.currentPage = 1;\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.filteredAlbums.length / this.itemsPerPage);\n  }\n\n  get visibleAlbums(): Album[] {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    return this.filteredAlbums.slice(\n      startIndex,\n      startIndex + this.itemsPerPage\n    );\n  }\n\n  onPageChange(page: number): void {\n    this.currentPage = page;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}