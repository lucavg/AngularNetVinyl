{"ast":null,"code":"import { of, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.localStorageKey = 'userId';\n  }\n  getUser() {\n    var userId = localStorage.getItem(this.localStorageKey);\n    return this.getUserAsync(userId).pipe(switchMap(response => {\n      console.log(response);\n      return of(response);\n    }));\n  }\n  getUserAsync(id) {\n    return this.http.get(this.baseUrl + 'api/v1/authenticate/users/' + id, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAqBA,EAAE,EAAEC,SAAS,QAAQ,MAAM;;;AAKhD,OAAM,MAAOC,WAAW;EAGtBC,YACUC,IAAgB,EACIC,OAAe;IADnC,SAAI,GAAJD,IAAI;IACgB,YAAO,GAAPC,OAAO;IAJ7B,oBAAe,GAAG,QAAQ;EAK/B;EAEHC,OAAO;IACL,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,eAAe,CAAE;IACxD,OAAO,IAAI,CAACC,YAAY,CAACJ,MAAM,CAAC,CAACK,IAAI,CACnCX,SAAS,CAAEY,QAAQ,IAAI;MACrBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,OAAOb,EAAE,CAACa,QAAQ,CAAC;IACrB,CAAC,CAAC,CACH;EACH;EAEAF,YAAY,CAACK,EAAU;IACrB,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAClB,IAAI,CAACZ,OAAO,GAAG,4BAA4B,GAAGW,EAAE,EAChD;MAAEE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB;IAAE,CAAE,CACpD;EACH;;AAvBWhB,WAAW;mBAAXA,WAAW,0CAKZ,UAAU;AAAA;AALTA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["of","switchMap","UserService","constructor","http","baseUrl","getUser","userId","localStorage","getItem","localStorageKey","getUserAsync","pipe","response","console","log","id","get","headers","factory","providedIn"],"sourceRoot":"","sources":["/home/exorra/Documents/GitHub/AngularNetVinyl/ClientApp/src/app/services/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { User } from '../interfaces/User';\nimport { Observable, of, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private localStorageKey = 'userId';\n\n  constructor(\n    private http: HttpClient,\n    @Inject('BASE_URL') private baseUrl: string\n  ) {}\n\n  getUser(): Observable<User[]> {\n    var userId = localStorage.getItem(this.localStorageKey)!;\n    return this.getUserAsync(userId).pipe(\n      switchMap((response) => {\n        console.log(response);\n        return of(response);\n      })\n    );\n  }\n\n  getUserAsync(id: string): Observable<User[]> {\n    return this.http.get<User[]>(\n      this.baseUrl + 'api/v1/authenticate/users/' + id,\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}