{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/collection.service\";\nimport * as i2 from \"src/app/services/refresh.service\";\nimport * as i3 from \"ngx-toastr\";\nexport class FullAlbumComponent {\n  constructor(collectionService, refreshService, toastr) {\n    this.collectionService = collectionService;\n    this.refreshService = refreshService;\n    this.toastr = toastr;\n    this.album = {};\n  }\n  getArtistName() {\n    return this.album.artists[0].name || '';\n  }\n  getSpotifyLink() {\n    return this.album.external_urls.spotify;\n  }\n  removeFromFavorites() {\n    const collectionId = localStorage.getItem('collectionId');\n    if (collectionId !== null) {\n      this.collectionService.removeAlbumFromCollection(collectionId, this.album).subscribe({\n        next: () => {\n          this.album.added_to_collection = false;\n          this.refreshService.triggerRefresh();\n          this.toastr.info('Album removed from favorites!');\n        },\n        error: response => {\n          this.toastr.error('Failed to remove album from favorites!');\n        }\n      });\n    }\n  }\n}\nFullAlbumComponent.ɵfac = function FullAlbumComponent_Factory(t) {\n  return new (t || FullAlbumComponent)(i0.ɵɵdirectiveInject(i1.CollectionService), i0.ɵɵdirectiveInject(i2.RefreshService), i0.ɵɵdirectiveInject(i3.ToastrService));\n};\nFullAlbumComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FullAlbumComponent,\n  selectors: [[\"app-full-album\"]],\n  inputs: {\n    album: \"album\"\n  },\n  decls: 15,\n  vars: 7,\n  consts: [[1, \"relative\", \"flex\", \"flex-col\", \"items-center\"], [1, \"w-52\", \"h-52\", \"bg-gray-200\", \"rounded-md\"], [\"target\", \"_blank\", 3, \"href\"], [1, \"object-cover\", \"w-full\", \"h-full\", \"rounded-md\", 3, \"src\", \"alt\"], [1, \"absolute\", \"top-0\", \"right-0\", \"p-2\", \"rounded-25\", \"bg-green-500\", \"hover:bg-red-500\", \"focus:outline-none\", \"transition-colors\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 16 16\", \"stroke\", \"#000\", 1, \"h-4\", \"w-4\", \"m-auto\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"], [1, \"mt-2\", \"text-black\", \"text-center\"], [1, \"mt-1\", \"text-gray-500\", \"text-center\"]],\n  template: function FullAlbumComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵelement(3, \"img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function FullAlbumComponent_Template_button_click_4_listener() {\n        return ctx.removeFromFavorites();\n      });\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(5, \"svg\", 5);\n      i0.ɵɵelement(6, \"path\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(7, \"div\", 7);\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"href\", ctx.album.external_urls.spotify, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.album.images[0].url || \"assets/music_placeholder.png\", i0.ɵɵsanitizeUrl)(\"alt\", ctx.album.name);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", ctx.album.name || \"undefined\", \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.getArtistName());\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.album.release_date);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.album.total_tracks, \" tracks \");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});","map":{"version":3,"mappings":";;;;AAWA,OAAM,MAAOA,kBAAkB;EAG7BC,YACUC,iBAAoC,EACpCC,cAA8B,EAC9BC,MAAqB;IAFrB,sBAAiB,GAAjBF,iBAAiB;IACjB,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IALP,UAAK,GAAkB,EAAmB;EAMhD;EAEHC,aAAa;IACX,OAAO,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,IAAI,EAAE;EACzC;EAEAC,cAAc;IACZ,OAAO,IAAI,CAACH,KAAK,CAACI,aAAa,CAACC,OAAO;EACzC;EAEAC,mBAAmB;IACjB,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,IAAIF,YAAY,KAAK,IAAI,EAAE;MACzB,IAAI,CAACX,iBAAiB,CACnBc,yBAAyB,CAACH,YAAY,EAAE,IAAI,CAACP,KAAK,CAAC,CACnDW,SAAS,CAAC;QACTC,IAAI,EAAE,MAAK;UACT,IAAI,CAACZ,KAAK,CAACa,mBAAmB,GAAG,KAAK;UACtC,IAAI,CAAChB,cAAc,CAACiB,cAAc,EAAE;UACpC,IAAI,CAAChB,MAAM,CAACiB,IAAI,CAAC,+BAA+B,CAAC;QACnD,CAAC;QACDC,KAAK,EAAGC,QAAQ,IAAI;UAClB,IAAI,CAACnB,MAAM,CAACkB,KAAK,CAAC,wCAAwC,CAAC;QAC7D;OACD,CAAC;;EAER;;AAjCWtB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAwB;EAAAC;IAAAnB;EAAA;EAAAoB;EAAAC;EAAAC;EAAAC;IAAA;MCX/BC,8BAAiD;MAG3CA,yBAIE;MACJA,iBAAI;MACJA,iCAGC;MADCA;QAAA,OAASC,yBAAqB;MAAA,EAAC;MAE/BD,mBAMC;MANDA,8BAMC;MACCA,0BAKE;MACJA,iBAAM;MAGVA,oBAAyC;MAAzCA,8BAAyC;MACvCA,YACF;MAAAA,iBAAM;MACNA,8BAA4C;MAAAA,aAAqB;MAAAA,iBAAM;MACvEA,+BAA4C;MAAAA,aAAwB;MAAAA,iBAAM;MAC1EA,+BAA4C;MAC1CA,aACF;MAAAA,iBAAM;;;MAlCDA,eAAoC;MAApCA,wEAAoC;MAEnCA,eAA6D;MAA7DA,iGAA6D;MA0BjEA,eACF;MADEA,8DACF;MAC4CA,eAAqB;MAArBA,yCAAqB;MACrBA,eAAwB;MAAxBA,4CAAwB;MAElEA,eACF;MADEA,8DACF","names":["FullAlbumComponent","constructor","collectionService","refreshService","toastr","getArtistName","album","artists","name","getSpotifyLink","external_urls","spotify","removeFromFavorites","collectionId","localStorage","getItem","removeAlbumFromCollection","subscribe","next","added_to_collection","triggerRefresh","info","error","response","selectors","inputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\AngularNetVinyl\\ClientApp\\src\\app\\components\\full-album\\full-album.component.ts","D:\\AngularNetVinyl\\ClientApp\\src\\app\\components\\full-album\\full-album.component.html"],"sourcesContent":["import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AlbumComplete } from 'src/app/interfaces/Spotify/Search/AlbumComplete';\r\nimport { CollectionService } from 'src/app/services/collection.service';\r\nimport { RefreshService } from 'src/app/services/refresh.service';\r\n\r\n@Component({\r\n  selector: 'app-full-album',\r\n  templateUrl: './full-album.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FullAlbumComponent {\r\n  @Input() album: AlbumComplete = {} as AlbumComplete;\r\n\r\n  constructor(\r\n    private collectionService: CollectionService,\r\n    private refreshService: RefreshService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  getArtistName(): string {\r\n    return this.album.artists[0].name || '';\r\n  }\r\n\r\n  getSpotifyLink(): string | undefined {\r\n    return this.album.external_urls.spotify;\r\n  }\r\n\r\n  removeFromFavorites(): void {\r\n    const collectionId = localStorage.getItem('collectionId');\r\n    if (collectionId !== null) {\r\n      this.collectionService\r\n        .removeAlbumFromCollection(collectionId, this.album)\r\n        .subscribe({\r\n          next: () => {\r\n            this.album.added_to_collection = false;\r\n            this.refreshService.triggerRefresh();\r\n            this.toastr.info('Album removed from favorites!');\r\n          },\r\n          error: (response) => {\r\n            this.toastr.error('Failed to remove album from favorites!');\r\n          },\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div class=\"relative flex flex-col items-center\">\r\n  <div class=\"w-52 h-52 bg-gray-200 rounded-md\">\r\n    <a [href]=\"album.external_urls.spotify\" target=\"_blank\">\r\n      <img\r\n        [src]=\"album.images[0].url || 'assets/music_placeholder.png'\"\r\n        [alt]=\"album.name\"\r\n        class=\"object-cover w-full h-full rounded-md\"\r\n      />\r\n    </a>\r\n    <button\r\n      class=\"absolute top-0 right-0 p-2 rounded-25 bg-green-500 hover:bg-red-500 focus:outline-none transition-colors\"\r\n      (click)=\"removeFromFavorites()\"\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        class=\"h-4 w-4 m-auto\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 16 16\"\r\n        stroke=\"#000\"\r\n      >\r\n        <path\r\n          stroke-linecap=\"round\"\r\n          stroke-linejoin=\"round\"\r\n          stroke-width=\"2\"\r\n          d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n  <div class=\"mt-2 text-black text-center\">\r\n    {{ album.name || \"undefined\" }}\r\n  </div>\r\n  <div class=\"mt-1 text-gray-500 text-center\">{{ getArtistName() }}</div>\r\n  <div class=\"mt-1 text-gray-500 text-center\">{{ album.release_date }}</div>\r\n  <div class=\"mt-1 text-gray-500 text-center\">\r\n    {{ album.total_tracks }} tracks\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}