{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CollectionService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.apiUrl = 'api/v1/collections';\n  }\n  getAllCollections() {\n    return this.http.get(`${this.apiUrl}/all`);\n  }\n  getCollection(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createCollection(collection) {\n    return this.http.post(`${this.apiUrl}/create`, collection);\n  }\n  updateCollection(id, collection) {\n    return this.http.put(`${this.apiUrl}/${id}`, collection);\n  }\n  deleteCollection(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  addAlbumToCollection(collectionId, album) {\n    return this.http.post(`${this.apiUrl}/${collectionId}/add-album`, album);\n  }\n  updateAlbumInCollection(collectionId, albumId, album) {\n    return this.http.put(`${this.apiUrl}/${collectionId}/update-album/${albumId}`, album);\n  }\n  removeAlbumFromCollection(collectionId, albumId) {\n    return this.http.delete(`${this.apiUrl}/${collectionId}/remove-album/${albumId}`);\n  }\n}\nCollectionService.ɵfac = function CollectionService_Factory(t) {\n  return new (t || CollectionService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nCollectionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CollectionService,\n  factory: CollectionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,iBAAiB;EAC5BC,YACUC,IAAgB,EACIC,OAAe;IADnC,SAAI,GAAJD,IAAI;IACgB,YAAO,GAAPC,OAAO;IAG7B,WAAM,GAAG,oBAAoB;EAFlC;EAIHC,iBAAiB;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACC,MAAM,MAAM,CAAC;EAC1D;EAEAC,aAAa,CAACC,EAAU;IACtB,OAAO,IAAI,CAACN,IAAI,CAACG,GAAG,CAAa,GAAG,IAAI,CAACC,MAAM,IAAIE,EAAE,EAAE,CAAC;EAC1D;EAEAC,gBAAgB,CAACC,UAAsB;IACrC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAa,GAAG,IAAI,CAACL,MAAM,SAAS,EAAEI,UAAU,CAAC;EACxE;EAEAE,gBAAgB,CAACJ,EAAU,EAAEE,UAAsB;IACjD,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIE,EAAE,EAAE,EAAEE,UAAU,CAAC;EAChE;EAEAI,gBAAgB,CAACN,EAAU;IACzB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACT,MAAM,IAAIE,EAAE,EAAE,CAAC;EACvD;EAEAQ,oBAAoB,CAACC,YAAoB,EAAEC,KAAoB;IAC7D,OAAO,IAAI,CAAChB,IAAI,CAACS,IAAI,CAAa,GAAG,IAAI,CAACL,MAAM,IAAIW,YAAY,YAAY,EAAEC,KAAK,CAAC;EACtF;EAEAC,uBAAuB,CAACF,YAAoB,EAAEG,OAAe,EAAEF,KAAoB;IACjF,OAAO,IAAI,CAAChB,IAAI,CAACW,GAAG,CAAO,GAAG,IAAI,CAACP,MAAM,IAAIW,YAAY,iBAAiBG,OAAO,EAAE,EAAEF,KAAK,CAAC;EAC7F;EAEAG,yBAAyB,CAACJ,YAAoB,EAAEG,OAAe;IAC7D,OAAO,IAAI,CAAClB,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACT,MAAM,IAAIW,YAAY,iBAAiBG,OAAO,EAAE,CAAC;EACzF;;AAtCWpB,iBAAiB;mBAAjBA,iBAAiB,0CAGlB,UAAU;AAAA;AAHTA,iBAAiB;SAAjBA,iBAAiB;EAAAsB,SAAjBtB,iBAAiB;EAAAuB,YAFhB;AAAM","names":["CollectionService","constructor","http","baseUrl","getAllCollections","get","apiUrl","getCollection","id","createCollection","collection","post","updateCollection","put","deleteCollection","delete","addAlbumToCollection","collectionId","album","updateAlbumInCollection","albumId","removeAlbumFromCollection","factory","providedIn"],"sourceRoot":"","sources":["/home/exorra/Documents/GitHub/AngularNetVinyl/ClientApp/src/app/services/collection.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, switchMap } from 'rxjs';\nimport { Collection } from '../interfaces/Collection/Collection';\nimport { AlbumResponse } from '../interfaces/Spotify/Search/AlbumResponse';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CollectionService {\n  constructor(\n    private http: HttpClient,\n    @Inject('BASE_URL') private baseUrl: string\n  ) {}\n\n  private apiUrl = 'api/v1/collections';\n\n  getAllCollections(): Observable<Collection[]> {\n    return this.http.get<Collection[]>(`${this.apiUrl}/all`);\n  }\n\n  getCollection(id: string): Observable<Collection> {\n    return this.http.get<Collection>(`${this.apiUrl}/${id}`);\n  }\n\n  createCollection(collection: Collection): Observable<Collection> {\n    return this.http.post<Collection>(`${this.apiUrl}/create`, collection);\n  }\n\n  updateCollection(id: string, collection: Collection): Observable<void> {\n    return this.http.put<void>(`${this.apiUrl}/${id}`, collection);\n  }\n\n  deleteCollection(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n\n  addAlbumToCollection(collectionId: string, album: AlbumResponse): Observable<Collection> {\n    return this.http.post<Collection>(`${this.apiUrl}/${collectionId}/add-album`, album);\n  }\n\n  updateAlbumInCollection(collectionId: string, albumId: string, album: AlbumResponse): Observable<void> {\n    return this.http.put<void>(`${this.apiUrl}/${collectionId}/update-album/${albumId}`, album);\n  }\n\n  removeAlbumFromCollection(collectionId: string, albumId: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${collectionId}/remove-album/${albumId}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}