{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/collection.service\";\nexport class CollectionGridComponent {\n  constructor(collectionService) {\n    this.collectionService = collectionService;\n    this.albums = [];\n    this.filteredAlbums = [];\n    this.searchControl = new FormControl('');\n    this.currentPage = 1;\n    this.itemsPerPage = 9;\n  }\n  ngOnInit() {\n    this.loadCollection();\n    this.searchControl.valueChanges.subscribe(searchTerm => {\n      this.filterAlbums(searchTerm);\n    });\n  }\n  loadCollection() {\n    this.collectionService.getCollection().subscribe(collection => {\n      this.albums = collection.albums;\n      this.filterAlbums(this.searchControl.value);\n    });\n  }\n  filterAlbums(searchTerm) {\n    const filtered = this.albums.filter(album => album.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    this.filteredAlbums = filtered;\n    this.currentPage = 1;\n  }\n  get totalPages() {\n    return Math.ceil(this.filteredAlbums.length / this.itemsPerPage);\n  }\n  get visibleAlbums() {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    return this.filteredAlbums.slice(startIndex, startIndex + this.itemsPerPage);\n  }\n  onPageChange(page) {\n    this.currentPage = page;\n  }\n}\nCollectionGridComponent.ɵfac = function CollectionGridComponent_Factory(t) {\n  return new (t || CollectionGridComponent)(i0.ɵɵdirectiveInject(i1.CollectionService));\n};\nCollectionGridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CollectionGridComponent,\n  selectors: [[\"app-collection\"]],\n  decls: 2,\n  vars: 0,\n  template: function CollectionGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"collection works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb2xsZWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29sbGVjdGlvbi9jb2xsZWN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;;;AAS5C,OAAM,MAAOC,uBAAuB;EAOlCC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IANrC,WAAM,GAAoB,EAAE;IAC5B,mBAAc,GAAoB,EAAE;IACpC,kBAAa,GAAG,IAAIH,WAAW,CAAC,EAAE,CAAC;IACnC,gBAAW,GAAG,CAAC;IACf,iBAAY,GAAG,CAAC;EAE2C;EAE3DI,QAAQ;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,aAAa,CAACC,YAAY,CAACC,SAAS,CAAEC,UAAU,IAAI;MACvD,IAAI,CAACC,YAAY,CAACD,UAAW,CAAC;IAChC,CAAC,CAAC;EACJ;EAEAJ,cAAc;IACZ,IAAI,CAACF,iBAAiB,CAACQ,aAAa,EAAE,CAACH,SAAS,CAAEI,UAAU,IAAI;MAC9D,IAAI,CAACC,MAAM,GAAGD,UAAU,CAACC,MAAM;MAC/B,IAAI,CAACH,YAAY,CAAC,IAAI,CAACJ,aAAa,CAACQ,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ;EAEAJ,YAAY,CAACD,UAAkB;IAC7B,MAAMM,QAAQ,GAAG,IAAI,CAACF,MAAM,CAACG,MAAM,CAAEC,KAAK,IACxCA,KAAK,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACX,UAAU,CAACU,WAAW,EAAE,CAAC,CAC7D;IACD,IAAI,CAACE,cAAc,GAAGN,QAAQ;IAC9B,IAAI,CAACO,WAAW,GAAG,CAAC;EACtB;EAEA,IAAIC,UAAU;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACJ,cAAc,CAACK,MAAM,GAAG,IAAI,CAACC,YAAY,CAAC;EAClE;EAEA,IAAIC,aAAa;IACf,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACP,WAAW,GAAG,CAAC,IAAI,IAAI,CAACK,YAAY;IAC7D,OAAO,IAAI,CAACN,cAAc,CAACS,KAAK,CAC9BD,UAAU,EACVA,UAAU,GAAG,IAAI,CAACF,YAAY,CAC/B;EACH;EAEAI,YAAY,CAACC,IAAY;IACvB,IAAI,CAACV,WAAW,GAAGU,IAAI;EACzB;;AA7CW/B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,yBAAG;MAAAA,iCAAiB;MAAAA,iBAAI","names":["FormControl","CollectionGridComponent","constructor","collectionService","ngOnInit","loadCollection","searchControl","valueChanges","subscribe","searchTerm","filterAlbums","getCollection","collection","albums","value","filtered","filter","album","title","toLowerCase","includes","filteredAlbums","currentPage","totalPages","Math","ceil","length","itemsPerPage","visibleAlbums","startIndex","slice","onPageChange","page","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\AngularNetVinyl\\ClientApp\\src\\app\\collection\\collection.component.ts","D:\\AngularNetVinyl\\ClientApp\\src\\app\\collection\\collection.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { CollectionService } from '../services/collection.service';\nimport { AlbumResponse } from '../interfaces/Spotify/Search/AlbumResponse';\n\n@Component({\n  selector: 'app-collection',\n  templateUrl: './collection.component.html',\n  styleUrls: ['./collection.component.css'],\n})\nexport class CollectionGridComponent implements OnInit {\n  albums: AlbumResponse[] = [];\n  filteredAlbums: AlbumResponse[] = [];\n  searchControl = new FormControl('');\n  currentPage = 1;\n  itemsPerPage = 9;\n\n  constructor(private collectionService: CollectionService) {}\n\n  ngOnInit(): void {\n    this.loadCollection();\n    this.searchControl.valueChanges.subscribe((searchTerm) => {\n      this.filterAlbums(searchTerm!);\n    });\n  }\n\n  loadCollection(): void {\n    this.collectionService.getCollection().subscribe((collection) => {\n      this.albums = collection.albums;\n      this.filterAlbums(this.searchControl.value);\n    });\n  }\n\n  filterAlbums(searchTerm: string): void {\n    const filtered = this.albums.filter((album) =>\n      album.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    this.filteredAlbums = filtered;\n    this.currentPage = 1;\n  }\n\n  get totalPages(): number {\n    return Math.ceil(this.filteredAlbums.length / this.itemsPerPage);\n  }\n\n  get visibleAlbums(): Album[] {\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n    return this.filteredAlbums.slice(\n      startIndex,\n      startIndex + this.itemsPerPage\n    );\n  }\n\n  onPageChange(page: number): void {\n    this.currentPage = page;\n  }\n}\n","<p>collection works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}