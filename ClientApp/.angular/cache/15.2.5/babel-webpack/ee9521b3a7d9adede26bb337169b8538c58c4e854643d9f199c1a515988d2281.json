{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class RefreshService {\n  constructor() {\n    this.refreshSubject = new Subject();\n    this.refresh$ = this.refreshSubject.asObservable();\n  }\n  triggerRefresh() {\n    this.refreshSubject.next();\n  }\n}\nRefreshService.ɵfac = function RefreshService_Factory(t) {\n  return new (t || RefreshService)();\n};\nRefreshService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RefreshService,\n  factory: RefreshService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,cAAc;EAH3BC;IAIU,mBAAc,GAAG,IAAIF,OAAO,EAAQ;IAE5C,aAAQ,GAAG,IAAI,CAACG,cAAc,CAACC,YAAY,EAAE;;EAE7CC,cAAc;IACZ,IAAI,CAACF,cAAc,CAACG,IAAI,EAAE;EAC5B;;AAPWL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAM,SAAdN,cAAc;EAAAO,YAFb;AAAM","names":["Subject","RefreshService","constructor","refreshSubject","asObservable","triggerRefresh","next","factory","providedIn"],"sourceRoot":"","sources":["D:\\AngularNetVinyl\\ClientApp\\src\\app\\services\\refresh.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RefreshService {\r\n  private refreshSubject = new Subject<void>();\r\n\r\n  refresh$ = this.refreshSubject.asObservable();\r\n\r\n  triggerRefresh() {\r\n    this.refreshSubject.next();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}