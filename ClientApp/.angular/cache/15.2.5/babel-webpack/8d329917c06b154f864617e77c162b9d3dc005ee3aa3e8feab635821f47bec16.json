{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/login\"];\n};\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.username = '';\n    this.password = '';\n    this.confirmPassword = '';\n  }\n  register() {\n    if (this.password !== this.confirmPassword) {\n      console.log(\"Passwords don't match\");\n      return;\n    }\n    const registerData = {\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      confirmPassword: this.confirmPassword\n    };\n    try {\n      this.authService.register(registerData).subscribe({\n        next: () => {\n          const loginData = {\n            email: this.email,\n            password: this.password\n          };\n          this.authService.login(loginData).subscribe({\n            next: response => {\n              localStorage.setItem('jwt', response.accessToken);\n              localStorage.setItem('username', response.username);\n              localStorage.setItem('userId', response.userId);\n              this.router.navigate(['/']);\n            },\n            error: () => {\n              console.log('Login failed');\n            }\n          });\n        },\n        error: () => {\n          console.log('Registration failed');\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 26,\n  vars: 6,\n  consts: [[1, \"flex\", \"items-center\", \"justify-center\"], [1, \"w-full\", \"max-w-md\"], [1, \"text-2xl\", \"font-bold\", \"text-center\", \"mb-4\"], [1, \"bg-white\", \"shadow-md\", \"rounded\", \"px-8\", \"pt-6\", \"pb-8\", \"mb-4\"], [1, \"mb-4\"], [\"for\", \"email\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"Enter your email\", \"name\", \"email\", \"required\", \"\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"username\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"username\", \"type\", \"text\", \"placeholder\", \"Choose a username\", \"name\", \"username\", \"required\", \"\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Enter your password\", \"name\", \"password\", \"required\", \"\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"confirmPassword\", \"type\", \"password\", \"placeholder\", \"Confirm your password\", \"name\", \"confirmPassword\", \"required\", \"\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"ngModel\", \"ngModelChange\"], [1, \"flex\", \"items-center\", \"justify-between\"], [\"type\", \"submit\", 1, \"bg-blue-500\", \"hover:bg-blue-700\", \"text-white\", \"font-bold\", \"py-2\", \"px-4\", \"rounded\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"click\"], [1, \"inline-block\", \"align-baseline\", \"font-bold\", \"text-sm\", \"text-blue-500\", \"hover:text-blue-800\", 3, \"routerLink\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \" Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n      i0.ɵɵtext(11, \" Username \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n      i0.ɵɵtext(15, \" Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\", 11);\n      i0.ɵɵtext(19, \" Confirm Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_22_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(23, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 15);\n      i0.ɵɵtext(25, \" Already have an account? Login \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;AAWA,OAAM,MAAOA,iBAAiB;EAM5BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAL5D,UAAK,GAAW,EAAE;IAClB,aAAQ,GAAW,EAAE;IACrB,aAAQ,GAAW,EAAE;IACrB,oBAAe,GAAW,EAAE;EAE2C;EAEvEC,QAAQ;IACN,IAAI,IAAI,CAACC,QAAQ,KAAK,IAAI,CAACC,eAAe,EAAE;MAC1CC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC;;IAGF,MAAMC,YAAY,GAAoB;MACpCC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBN,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBC,eAAe,EAAE,IAAI,CAACA;KACvB;IAED,IAAI;MACF,IAAI,CAACJ,WAAW,CAACE,QAAQ,CAACK,YAAY,CAAC,CAACG,SAAS,CAAC;QAChDC,IAAI,EAAE,MAAK;UACT,MAAMC,SAAS,GAAiB;YAC9BJ,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBL,QAAQ,EAAE,IAAI,CAACA;WAChB;UACD,IAAI,CAACH,WAAW,CAACa,KAAK,CAACD,SAAS,CAAC,CAACF,SAAS,CAAC;YAC1CC,IAAI,EAAGG,QAAuB,IAAI;cAChCC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEF,QAAQ,CAACG,WAAW,CAAC;cACjDF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,QAAQ,CAACL,QAAQ,CAAC;cACnDM,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,QAAQ,CAACI,MAAM,CAAC;cAC/C,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7B,CAAC;YACDC,KAAK,EAAE,MAAK;cACVf,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;YAC7B;WACD,CAAC;QACJ,CAAC;QACDc,KAAK,EAAE,MAAK;UACVf,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QACpC;OACD,CAAC;KACH,CAAC,OAAOc,KAAK,EAAE;MACdf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;;EAEtB;;AA/CWtB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,8BAA8C;MAEMA,wBAAQ;MAAAA,iBAAK;MAC7DA,+BAA6D;MAGvDA,uBACF;MAAAA,iBAAQ;MACRA,gCAQE;MAHAA;QAAA;MAAA,EAAmB;MALrBA,iBAQE;MAEJA,8BAAkB;MAKdA,2BACF;MAAAA,iBAAQ;MACRA,iCAQE;MAHAA;QAAA;MAAA,EAAsB;MALxBA,iBAQE;MAEJA,+BAAkB;MAKdA,2BACF;MAAAA,iBAAQ;MACRA,kCAQE;MAHAA;QAAA;MAAA,EAAsB;MALxBA,iBAQE;MAEJA,+BAAkB;MAKdA,mCACF;MAAAA,iBAAQ;MACRA,kCAQE;MAHAA;QAAA;MAAA,EAA6B;MAL/BA,iBAQE;MAEJA,gCAA+C;MAI3CA;QAAA,OAASC,cAAU;MAAA,EAAC;MAEpBD,2BACF;MAAAA,iBAAS;MACTA,8BAGC;MACCA,iDACF;MAAAA,iBAAI;;;MArEFA,eAAmB;MAAnBA,mCAAmB;MAiBnBA,eAAsB;MAAtBA,sCAAsB;MAiBtBA,eAAsB;MAAtBA,sCAAsB;MAiBtBA,eAA6B;MAA7BA,6CAA6B;MAe7BA,eAAyB;MAAzBA,uDAAyB","names":["RegisterComponent","constructor","authService","router","register","password","confirmPassword","console","log","registerData","email","username","subscribe","next","loginData","login","response","localStorage","setItem","accessToken","userId","navigate","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/exorra/Documents/GitHub/AngularNetVinyl/ClientApp/src/app/register/register.component.ts","/home/exorra/Documents/GitHub/AngularNetVinyl/ClientApp/src/app/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { LoginRequest } from '../interfaces/Auth/LoginRequest';\nimport { LoginResponse } from '../interfaces/Auth/LoginResponse';\nimport { RegisterRequest } from '../interfaces/Auth/RegisterRequest';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent {\n  email: string = '';\n  username: string = '';\n  password: string = '';\n  confirmPassword: string = '';\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  register() {\n    if (this.password !== this.confirmPassword) {\n      console.log(\"Passwords don't match\");\n      return;\n    }\n\n    const registerData: RegisterRequest = {\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      confirmPassword: this.confirmPassword,\n    };\n\n    try {\n      this.authService.register(registerData).subscribe({\n        next: () => {\n          const loginData: LoginRequest = {\n            email: this.email,\n            password: this.password,\n          };\n          this.authService.login(loginData).subscribe({\n            next: (response: LoginResponse) => {\n              localStorage.setItem('jwt', response.accessToken);\n              localStorage.setItem('username', response.username);\n              localStorage.setItem('userId', response.userId);\n              this.router.navigate(['/']);\n            },\n            error: () => {\n              console.log('Login failed');\n            },\n          });\n        },\n        error: () => {\n          console.log('Registration failed');\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","<div class=\"flex items-center justify-center\">\n  <div class=\"w-full max-w-md\">\n    <h1 class=\"text-2xl font-bold text-center mb-4\">Register</h1>\n    <form class=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n      <div class=\"mb-4\">\n        <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"email\">\n          Email\n        </label>\n        <input\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"email\"\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          [(ngModel)]=\"email\"\n          name=\"email\"\n          required\n        />\n      </div>\n      <div class=\"mb-4\">\n        <label\n          class=\"block text-gray-700 text-sm font-bold mb-2\"\n          for=\"username\"\n        >\n          Username\n        </label>\n        <input\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"username\"\n          type=\"text\"\n          placeholder=\"Choose a username\"\n          [(ngModel)]=\"username\"\n          name=\"username\"\n          required\n        />\n      </div>\n      <div class=\"mb-4\">\n        <label\n          class=\"block text-gray-700 text-sm font-bold mb-2\"\n          for=\"password\"\n        >\n          Password\n        </label>\n        <input\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"password\"\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          [(ngModel)]=\"password\"\n          name=\"password\"\n          required\n        />\n      </div>\n      <div class=\"mb-4\">\n        <label\n          class=\"block text-gray-700 text-sm font-bold mb-2\"\n          for=\"confirmPassword\"\n        >\n          Confirm Password\n        </label>\n        <input\n          class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n          id=\"confirmPassword\"\n          type=\"password\"\n          placeholder=\"Confirm your password\"\n          [(ngModel)]=\"confirmPassword\"\n          name=\"confirmPassword\"\n          required\n        />\n      </div>\n      <div class=\"flex items-center justify-between\">\n        <button\n          class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n          type=\"submit\"\n          (click)=\"register()\"\n        >\n          Register\n        </button>\n        <a\n          class=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\"\n          [routerLink]=\"['/login']\"\n        >\n          Already have an account? Login\n        </a>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}