{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 6);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\", 6);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.summary);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 5)(1, \"thead\")(2, \"tr\")(3, \"th\", 6);\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 6);\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 6);\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 6);\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, FetchDataComponent_table_5_tr_12_Template, 9, 4, \"tr\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\", 1, \"text-2xl\", \"font-bold\", \"mb-4\"], [1, \"mb-4\"], [\"class\", \"italic\", 4, \"ngIf\"], [\"class\", \"table table-striped bg-white shadow-md rounded-lg overflow-hidden\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [1, \"italic\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\", \"bg-white\", \"shadow-md\", \"rounded-lg\", \"overflow-hidden\"], [1, \"py-2\", \"px-4\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 2, 0, \"p\", 2);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 13, 1, \"table\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.forecasts == null ? null : ctx.forecasts.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,4BAA6C;IAAAA,0BAAU;IAAAA,iBAAI;;;;;IAYvDA,0BAAuC;IACfA,YAAmB;IAAAA,iBAAK;IAC9CA,6BAAsB;IAAAA,YAA2B;IAAAA,iBAAK;IACtDA,6BAAsB;IAAAA,YAA2B;IAAAA,iBAAK;IACtDA,6BAAsB;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAH3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAsB;IAAtBA,yCAAsB;;;;;IAdlDA,gCAAuI;IAG3GA,oBAAI;IAAAA,iBAAK;IAC/BA,6BAAsB;IAAAA,yBAAS;IAAAA,iBAAK;IACpCA,6BAAsB;IAAAA,yBAAS;IAAAA,iBAAK;IACpCA,6BAAsB;IAAAA,wBAAO;IAAAA,iBAAK;IAGtCA,8BAAO;IACLA,2EAKK;IACPA,iBAAQ;;;;IANmBA,gBAAY;IAAZA,0CAAY;;;ACTzC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAsB,EAAE;IAGtCD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,kBAAkB;mBAAlBA,kBAAkB,4DAGS,UAAU;AAAA;AAHrCA,kBAAkB;QAAlBA,kBAAkB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/Bf,6BAAoD;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzEA,4BAAgB;MAAAA,0EAA0D;MAAAA,iBAAI;MAE9EA,+DAA2D;MAE3DA,wEAiBQ;;;MAnBJA,eAAwB;MAAxBA,6EAAwB;MAEmFA,eAAsB;MAAtBA,2CAAsB","names":["i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","forecasts","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\AngularNetVinyl\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","D:\\AngularNetVinyl\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\" class=\"text-2xl font-bold mb-4\">Weather forecast</h1>\r\n\r\n<p class=\"mb-4\">This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts?.length\" class=\"italic\">Loading...</p>\r\n\r\n<table class=\"table table-striped bg-white shadow-md rounded-lg overflow-hidden\" aria-labelledby=\"tableLabel\" *ngIf=\"forecasts.length\">\r\n  <thead>\r\n    <tr>\r\n      <th class=\"py-2 px-4\">Date</th>\r\n      <th class=\"py-2 px-4\">Temp. (C)</th>\r\n      <th class=\"py-2 px-4\">Temp. (F)</th>\r\n      <th class=\"py-2 px-4\">Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td class=\"py-2 px-4\">{{ forecast.date }}</td>\r\n      <td class=\"py-2 px-4\">{{ forecast.temperatureC }}</td>\r\n      <td class=\"py-2 px-4\">{{ forecast.temperatureF }}</td>\r\n      <td class=\"py-2 px-4\">{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}