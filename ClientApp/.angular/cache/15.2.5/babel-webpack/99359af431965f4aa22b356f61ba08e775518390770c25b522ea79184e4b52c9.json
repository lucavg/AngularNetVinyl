{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet NavMenuComponent = class NavMenuComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.isExpanded = false;\n  } // Inject the AuthService\n  toggle() {\n    this.isExpanded = !this.isExpanded;\n  }\n  closeMenu() {\n    this.isExpanded = false;\n  }\n  isLoggedIn() {\n    return this.authService.isLoggedIn(); // Implement the isLoggedIn() method in your AuthService\n  }\n\n  logout() {\n    this.authService.logout(); // Implement the logout() method in your AuthService\n  }\n};\n\nNavMenuComponent = __decorate([Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})], NavMenuComponent);\nexport { NavMenuComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAG3BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,eAAU,GAAY,KAAK;EAEoB,CAAC,CAAC;EAEjDC,MAAM;IACJ,IAAI,CAACC,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAEAC,SAAS;IACP,IAAI,CAACD,UAAU,GAAG,KAAK;EACzB;EAEAE,UAAU;IACR,OAAO,IAAI,CAACJ,WAAW,CAACI,UAAU,EAAE,CAAC,CAAC;EACxC;;EAEAC,MAAM;IACJ,IAAI,CAACL,WAAW,CAACK,MAAM,EAAE,CAAC,CAAC;EAC7B;CACD;;AApBYP,gBAAgB,eAL5BD,SAAS,CAAC;EACTS,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWV,gBAAgB,CAoB5B;SApBYA,gBAAgB","names":["Component","NavMenuComponent","constructor","authService","toggle","isExpanded","closeMenu","isLoggedIn","logout","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\AngularNetVinyl\\ClientApp\\src\\app\\nav-menu\\nav-menu.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from 'path/to/auth.service'; // Import your authentication service\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded: boolean = false;\r\n\r\n  constructor(private authService: AuthService) {} // Inject the AuthService\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  closeMenu() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.isLoggedIn(); // Implement the isLoggedIn() method in your AuthService\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout(); // Implement the logout() method in your AuthService\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}